#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>

const int Gravity = 2;
const int Alphabet[26][5] = {{0x3F, 0x48, 0x48, 0x48, 0x3F}, //A
					  	 	 {0x7F, 0x49, 0x49, 0x49, 0x36}, //B
							 {0x3E, 0x41, 0x41, 0x41, 0x22}, //C
							 {0x7F, 0x41, 0x41, 0x22, 0x1C}, //D
							 {0x7F, 0x49, 0x49, 0x49, 0x41}, //E
							 {0x7F, 0x48, 0x48, 0x48, 0x40}, //F
							 {0x3E, 0x41, 0x41, 0x49, 0x4F}, //G
							 {0x7F, 0x08, 0x08, 0x08, 0x7F}, //H
							 {0x00, 0x41, 0x7F, 0x41, 0x00}, //I
							 {0x02, 0x01, 0x41, 0x7E, 0x40}, //J
							 {0x7F, 0x08, 0x14, 0x22, 0x41}, //K
							 {0x7F, 0x01, 0x01, 0x01, 0x01}, //L
							 {0x7F, 0x20, 0x18, 0x20, 0x7F}, //M
							 {0x7F, 0x10, 0x08, 0x04, 0x7F}, //N
							 {0x3E, 0x41, 0x41, 0x41, 0x3E}, //O
							 {0x7F, 0x48, 0x48, 0x48, 0x30}, //P
							 {0x3E, 0x41, 0x45, 0x42, 0x3D}, //Q
							 {0x7F, 0x48, 0x4C, 0x4A, 0x31}, //R
							 {0x32, 0x49, 0x49, 0x49, 0x06}, //S
							 {0x40, 0x40, 0x7F, 0x40, 0x40}, //T
							 {0x7E, 0x01, 0x01, 0x01, 0x7E}, //U
							 {0x7C, 0x02, 0x01, 0x02, 0x7C}, //V
							 {0x7E, 0x01, 0x1E, 0x01, 0x7E}, //W
							 {0x63, 0x14, 0x08, 0x14, 0x63}, //X
							 {0x60, 0x10, 0x0F, 0x10, 0x60}, //Y
							 {0x43, 0x45, 0x49, 0x51, 0x61}  //Z
							};

int AlphaCoin[10][7][5] = {0};
int CoinPosition[10][2];

void Transform(int label, int num)
{
	int BinaryLine[8];
	for (int i = 0; i < 5; i++)
	{
		int p = Alphabet[num][i];
		for (int j = 0; j < 8; j++)
		{
			BinaryLine[7 - j] = p & 1;
			p >>= 1;
		}
		for (int j = 1; j < 8; j++)
		{
			AlphaCoin[label][j - 1][i] = BinaryLine[j];
		}
	}
}

/*

(x1, y1)|-------|
		|		|
		|-------|(x2, y2)

*/

BOOL Collision(Hero hero, int x1, int y1, int x2, int y2)
{
	int hx1 = hero.pos.x, hy1 = hero.pos.y;
	int hx2 = hx1 + hero.size.cx, hy2 = hy1 + hero.size.cy;
	if (hx2 < x1 || hx1 > x2) return FALSE;
	if (hy2 < y1 || hy1 > y2) return FALSE;
	return TRUE;
}